# -*- coding: utf-8 -*-
"""assignment7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bTdVIplU2mZ5xzez7GspYRai9xabnMh7
"""



import pandas as pd
import dash
from dash import dcc, html, Output, Input
import plotly.express as px
url = 'https://en.wikipedia.org/wiki/List_of_FIFA_World_Cup_finals'
tables = pd.read_html(url)
wcresult = tables[3]
winners = tables[4]
win = winners["Winners"]>0
winners  = winners[win]
wcresult=wcresult.iloc[:-1]
yeararr = wcresult["Year"]

val = wcresult["Year"]==1934
df = wcresult[val]
wcresult

fig = px.choropleth(
    winners,
    locations="Team",
    locationmode="country names",
    color="Winners",
    color_continuous_scale="Viridis",
    scope="world",
    title="World cup winners"
)
fig.update_layout(
    width=1000,
    height=600
)

app = dash.Dash()
server=app.server
app.layout = html.Div([
    html.H1("World Cup Map", style={"textAlign": "center"}),

    html.Div([
        
        html.Div([
            html.Label("Select a Year:", style={"marginTop": "20px"}),
            dcc.Dropdown(
                options=[{"label": year, "value": year} for year in yeararr],
                id="years",
                placeholder="Select a year",
                style={"width": "100%"}
            ),
            html.Div(id="year-output", style={
                "marginTop": "20px",
                "fontWeight": "bold",
                "fontSize": "18px"
            })
        ], style={
            "flex": "1",
            "padding": "10px",
            "borderRight": "1px solid #ccc",
            "minWidth": "200px",
            "maxWidth": "300px",
            "boxSizing": "border-box",
            "overflowY": "auto"
        }),

  
        html.Div([
            dcc.Graph(id="world-map", figure=fig, style={
                "height": "100%",
                "width": "100%",
                "justifyContent": "center",
                "alignItems": "center"
            })
        ], style={
            "flex": "2",
            "padding": "10px",
            "minWidth": "300px",
            "boxSizing": "border-box",
            "overflow": "hidden"
        }),
        html.Div([
            html.H3("Selected Country Info"),
            html.Div(id="country-output", style={
                "marginTop": "20px",
                "fontSize": "18px"
            })
        ], style={
            "flex": "1",
            "padding": "10px",
            "borderLeft": "1px solid #ccc",
            "minWidth": "200px",
            "maxWidth": "300px",
            "boxSizing": "border-box",
            "overflowY": "auto"
        })
    ], style={
        "display": "flex",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "height": "85vh",
        "width": "100%",
        "boxSizing": "border-box"
    })
])
@app.callback(
    Output("year-output", "children"),
    Input("years", "value")
)
def update_map(selected_year):
  if selected_year is None:
      return "Click on a country to see more info."

  val = wcresult["Year"]==selected_year
  df = wcresult[val]
  return f"{selected_year} winner is {df['Winners'].values[0]}, runner up is {df['Runners-up'].values[0]}"
@app.callback(
    Output("country-output", "children"),
    Input("world-map", "clickData")
)
def display_click_info(clickData):
    if clickData is None:
        return "Click on a country to see more info."

    country = clickData["points"][0]["location"]
    value = clickData["points"][0]["z"]
    return f"{country} Trophies: {value}"

if __name__ == '__main__':
    app.run(debug=True)

